---
- name: install tomcat on ubuntu
  hosts: all
  become: yes
  vars:
    tomcat_home: /opt/tomcat
    tomcat_username: tomact
    tomcat_shell: /bin/false
    tomcat_version: '9.0.54'
    tomcat_service_dest: /etc/systemd/system/tomcat.service
  tasks:
    - name: install java
      apt:
        name: openjdk-11-jdk
        update_cache: yes
        state: present
    - name: create user with new directory and new shell
      ansible.builtin.user:
        name: "{{ tomcat_username}}"
        home: "{{ tomcat_home }}"
        shell: "{{ tomcat_shell }}"
        state: present
    - name: copy the tomcat file
      get_url:
        url: "https://archive.apache.org/dist/tomcat/tomcat-9/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"    
    - name: untar the tomcat file and save it to /opt/tomcat file
      ansible.builtin.unarchive:  
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ tomcat_home }}"
    - name: create symlink
      ansible.builtin.file:
        src: "{{ tomcat_home }}"
        dest: "{{ tomcat_home }}/latest"
        state: link
    - name: change file permission
      ansible.builtin.file:
        path: "{{ tomcat_home }}"
        state: directory
        recurse: yes
        owner: "{{ tomcat_username }}"  
        group: "{{ tomcat_username }}"  
    - name: find the sh files
      find:
        path: "{{tomcat_home}}/latest/bin"
        patterns: '*.sh'
      register: shfiles
    - name: print values
      debug:
        var: shfiles
    - name: set the fact variables
     set_fact:
        tomcat_executables: "{{shfiles.files | map(attribute='path') | list }}" 
    - name: print variables
      debug:
        var: tomcat_executables
    - name: change permission of the sh files
      ansible.builtin.file:
        path: "{{ item }}"  
        mode: '0751'
      with_items: "{{ tomcat_executables }}"        
    - name: copy the content         
      ansible.builtin.copy:
        src: tomcat.service
        dest: "{{ tomcat_service_dest }}"
      notify:
      - reload and enable tomcat
    - name: ensure tomacat is running 
      ansible.builtin.systemd:
        name: tomcat.service
        state: started
  handlers:
    - name: reload and enable tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        deamon_reload: yes
        state: reloded
        enabled: yes


   